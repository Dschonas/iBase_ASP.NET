@model PagedList.IPagedList<iBase_ASP_DOT_NET.Models.ArtistTable>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Artists";
}

<h2>Artists</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Artist", FormMethod.Get)) {

    <div class="form-horizontal">
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" class="btn btn-default" />
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", 
                  new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            
        </th>
        <th>
            Href
        </th>
        <th>
            @Html.ActionLink("Genre", "Index",
                  new { sortOrder = ViewBag.GenreSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Followers Total
        </th>
        <th>
            @Html.ActionLink("Popularity", "Index",
                  new { sortOrder = ViewBag.PopularitySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Type", "Index",
                  new { sortOrder = ViewBag.TypeSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Href)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FollowersTotal)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Popularity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new {
        page,
        sortOrder = ViewBag.CurrentSort,
        currentFilter = ViewBag.CurrentFilter
    }))